(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[11],{

/***/ "./node_modules/react-month-picker/lib/month-picker.js":
/*!*************************************************************!*\
  !*** ./node_modules/react-month-picker/lib/month-picker.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Month-Picker\n *\n * Properties:\n * @years:\n *  - array: [2013, 2015, 2016]\n *  - number: 5 (last 4 years and this year)\n *  - object: {min: 2013, max: 2016} (from 2013 to 2016); {min: 2013} (from 2013 to this year); {max: 2015} (5 years to 2015)\n * @value: default value for picking\n *  1: a single month: e.g. { year: 2015: month: 11 }\n *  2: several months: e.g. [ { year: 2015: month: 9 }, { year: 2015: month: 11 } { year: 2016: month: 3 } ]\n *  3: a span of months, e.g. { from: {year: 2014: month: 7}, to: {year: 2015: month: 11} }\n * @lang: language texts\n *  - array: array of months' texts, e.g. ['Jan', 'Feb', 'Mar', 'Spr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n *  - object: including array of months' texts and other display texts\n *      e.g. {from: \"From:\", to: \"To:\", months: [...]}\n * @theme: theme setting of month-picker; 2 options (light/dark); default theme is light\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _react = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactTapper = __webpack_require__(/*! react-tapper */ \"./node_modules/react-tapper/lib/tappable.js\");\n\nvar _reactTapper2 = _interopRequireDefault(_reactTapper);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar isBrowser = typeof window !== \"undefined\" && typeof document !== \"undefined\";\n\nvar __MIN_VALID_YEAR = 1000;\nvar _SINGLE_KEYS = ['year', 'month'];\nvar _RANGE_KEYS = ['from', 'to'];\nvar __YEAR = new Date().getFullYear();\n\nfunction mapToArray(num, callback) {\n    var arr = [];\n    for (var i = 0; i < num; i++) {\n        arr.push(callback(i));\n    }\n    return arr;\n}\n\nfunction getYearMon(year, min, max) {\n    var ym = (typeof year === 'undefined' ? 'undefined' : _typeof(year)) === 'object' && year.year ? { year: year.year, month: year.month } : typeof year === 'number' ? { year: year } : { __YEAR: __YEAR };\n    ym.min = min || 1;\n    ym.max = max || 12;\n    return ym;\n}\n\nfunction getYearsByNum(n, minYear) {\n    var maxYear = __YEAR;\n    // n is count of years\n    if (n && n > 0 && n < 100) {\n        minYear = minYear || maxYear - n + 1;\n    }\n    //\n    else {\n            // n is max year\n            if (n && n >= __MIN_VALID_YEAR) maxYear = n;\n\n            if (minYear) {\n                n = maxYear - minYear + 1;\n            } else {\n                n = 5;\n                minYear = maxYear - n + 1;\n            }\n        }\n    return mapToArray(n, function (i) {\n        return getYearMon(minYear + i);\n    });\n}\n\nfunction getYearArray(years) {\n    if (Array.isArray(years)) {\n        return years.map(function (y, i) {\n            return getYearMon(y);\n        }).sort(function (a, b) {\n            return a.year - b.year;\n        });\n    }\n    if ((typeof years === 'undefined' ? 'undefined' : _typeof(years)) === 'object') {\n        var n = 0,\n            min = 0;\n        var ymin = getYearMon(years.min),\n            ymax = getYearMon(years.max);\n        if (ymin.year > __MIN_VALID_YEAR) min = ymin.year;\n        if (ymax.year >= min) n = ymax.year;\n        var arr = getYearsByNum(n, min);\n        var last = arr.length - 1;\n        if (last >= 0) {\n            arr[0].min = ymin.month || arr[0].min;\n            arr[last].max = ymax.month || arr[last].max;\n        }\n        return arr;\n    } else if (typeof years === 'number' && years > 0) return getYearsByNum(years);else return getYearsByNum(5);\n}\n\nfunction validate(d, years, idx, yearIndexes) {\n    var ym = void 0;\n    if (d && typeof d.year === 'number' && d.year > __MIN_VALID_YEAR && typeof d.month === 'number' && d.month >= 1 && d.month <= 12) {\n        ym = d;\n    }\n\n    var foundThisYear = void 0;\n    for (var i = 0; i < years.length; i++) {\n        if (ym && years[i].year === ym.year) {\n            yearIndexes[idx] = i;\n            return ym;\n        } else if (years[i].year === __YEAR) {\n            foundThisYear = i;\n        }\n    }\n\n    if (typeof foundThisYear === 'number') {\n        yearIndexes[idx] = foundThisYear;\n        return { year: __YEAR };\n    }\n\n    var last = yearIndexes[idx] = years.length - 1;\n    var y = years[last];\n    return { year: y.year, month: Math.floor((y.max - y.min) / 2) };\n}\n\nfunction validValue(value, years, yearIndexes) {\n    value = value || {};\n    if (typeof value.year === 'number') {\n        var _validate = validate(value, years, 0, yearIndexes),\n            year = _validate.year,\n            month = _validate.month;\n\n        return { type: 'single', pads: 1, year: year, month: month };\n    } else if (Array.isArray(value) && value.length > 0) {\n        return {\n            type: 'multiple', pads: 1,\n            choices: value.map(function (v, i) {\n                return validate(v, years, 0, i === 0 ? yearIndexes : [0]);\n            })\n        };\n    } else if (value.from && value.to) {\n        var from = validate(value.from, years, 0, yearIndexes),\n            to = validate(value.to, years, 1, yearIndexes);\n        if (from.year > to.year || from.year === to.year && from.month > to.month) {\n            from.year = to.year;\n            from.month = to.month;\n            if (from.month < 1) {\n                from.year--;\n                from.month += 12;\n            }\n        }\n        return { type: 'range', pads: 2, from: from, to: to };\n    }\n    return { pads: 0 };\n}\n\n// function valueChanged (v1, v2) {\n//     if (v1.type !== v2.type) return true\n//     const keys = _SINGLE_KEYS\n//     const items = keys.concat([ 'choice', ..._RANGE_KEYS, ])\n//     for (const i of items) {\n//         const x1 = v1[i], x2 = v2[i]\n//         if (!x1) continue\n//         if (typeof x1 === 'number' && x1 !== x2) return true\n//         if (Array.isArray(x1)) {\n//             if (!Array.isArray(x2)) return true\n//             if (x1.length !== x2.length) return true\n//             for (let j = 0; j < x1.length; j++) {\n//                 for (const k of keys) {\n//                     if (x1[j][k] !== x2[j][k]) return true\n//                 }\n//             }\n//         }\n//         if (typeof x1 === 'object' && typeof x2 === 'object') {\n//             for (const k of keys) {\n//                 if (x1[k] !== x2[k]) return true\n//             }\n//         }\n//     }\n//     return false\n// }\n//\n// function cloneValue (v) {\n//     if (!v) return v\n//     const { year, month, } = v\n//     return { year, month, }\n// }\n//\n// function cloneRange (r) {\n//     if (!r) return r\n//     const { from, to, } = r\n//     return {\n//         from: cloneValue(from),\n//         to: cloneValue(to),\n//     }\n// }\n\n\nfunction validateAutoRange(n) {\n    if (n <= 0) return 0;\n    return Math.floor(n);\n}\n\nfunction compareYM(ym1, ym2) {\n    var d = ym1.year - ym2.year;\n    return d === 0 ? ym1.month - ym2.month : d;\n}\n\nvar TypeYM = _propTypes2.default.shape({\n    year: _propTypes2.default.number,\n    month: _propTypes2.default.number\n});\n\nvar MonthPicker = function (_Component) {\n    _inherits(MonthPicker, _Component);\n\n    function MonthPicker(props, context) {\n        _classCallCheck(this, MonthPicker);\n\n        if (props.range) {\n            console.warn('Property \"range\" is deprecated, and use property \"value\" instead');\n        }\n\n        var _this = _possibleConstructorReturn(this, (MonthPicker.__proto__ || Object.getPrototypeOf(MonthPicker)).call(this, props, context));\n\n        _initialiseProps.call(_this);\n\n        var yearArr = getYearArray(_this.props.years);\n        var yearIndexes = [0];\n        var rawValue = validValue(_this.props.value, yearArr, yearIndexes);\n        if (!rawValue.type) {\n            throw new Error('invalid value of property \"value\" in month-picker');\n        }\n        _this.state = {\n            age: _this.props.age,\n            autoRange: validateAutoRange(_this.props.autoRange),\n            years: yearArr,\n            rawValue: rawValue,\n            yearIndexes: yearIndexes,\n            showed: false,\n            closeable: false\n        };\n        return _this;\n    }\n\n    _createClass(MonthPicker, [{\n        key: 'value',\n        value: function value() {\n            var _state$rawValue = this.state.rawValue,\n                year = _state$rawValue.year,\n                month = _state$rawValue.month,\n                choices = _state$rawValue.choices,\n                from = _state$rawValue.from,\n                to = _state$rawValue.to;\n\n            if (from && to) return { from: from, to: to };else if (choices && choices.length > 0) return choices;else if (year && month) return { year: year, month: month };\n            return null;\n        }\n\n        // getSnapshotBeforeUpdate(prevProps, prevState) {\n        //     // ...\n        // }\n        // componentDidUpdate(prevProps, prevState) {\n        // }\n\n    }, {\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            if (isBrowser) {\n                document.addEventListener('keydown', this._keyDown);\n            }\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            if (isBrowser) {\n                document.removeEventListener('keydown', this._keyDown);\n            }\n        }\n    }, {\n        key: 'optionPad',\n        value: function optionPad(padIndex) {\n            var _this2 = this;\n\n            var _state = this.state,\n                ymArr = _state.years,\n                rawValue = _state.rawValue,\n                yearIndexes = _state.yearIndexes,\n                autoRange = _state.autoRange;\n\n            var yearIdx = yearIndexes[padIndex];\n            var labelYear = ymArr[yearIdx].year;\n\n            var values = [];\n            var isRange = false;\n            if (rawValue.type === 'single') {\n                if (rawValue.year === labelYear) {\n                    rawValue.month && values.push(rawValue.month);\n                }\n            } else if (rawValue.type === 'multiple') {\n                var choices = rawValue.choices;\n                choices.forEach(function (c) {\n                    if (labelYear === c.year) {\n                        c.month && values.push(c.month);\n                    }\n                });\n            } else if (rawValue.type === 'range') {\n                isRange = true;\n                var from = rawValue.from,\n                    to = rawValue.to;\n\n                var startM = labelYear === from.year ? from.month : 1;\n                var endM = labelYear === to.year ? to.month : 12;\n                for (var i = startM; i <= endM; i++) {\n                    values.push(i);\n                }\n            }\n\n            var lang = this.props.lang || [];\n            var months = Array.isArray(lang) ? lang : Array.isArray(lang.months) ? lang.months : [];\n            var prevCss = '',\n                nextCss = '';\n            var yearMaxIdx = ymArr.length - 1;\n\n            var atMinYear = labelYear === ymArr[0].year;\n            var atMaxYear = labelYear === ymArr[yearMaxIdx].year;\n            var otherValue = { year: 0, month: 0 },\n                labelPreText = void 0;\n            if (isRange) {\n                otherValue = rawValue[_RANGE_KEYS[1 - padIndex]];\n                labelPreText = _react2.default.createElement(\n                    'b',\n                    null,\n                    this.props.lang[_RANGE_KEYS[padIndex]]\n                );\n            }\n\n            if (yearIdx === 0) prevCss = 'disable';\n            if (yearIdx === yearMaxIdx) nextCss = 'disable';\n            if (autoRange === 0) {\n                if (padIndex === 1 && otherValue.year === labelYear) prevCss = 'disable';\n                if (padIndex === 0 && otherValue.year === labelYear) nextCss = 'disable';\n            }\n\n            var prevHandler = prevCss === 'disable' ? undefined : this._goPrevYear;\n            var nextHandler = nextCss === 'disable' ? undefined : this._goNextYear;\n\n            var valOffset = 0;\n\n            return _react2.default.createElement(\n                'div',\n                { className: 'rmp-pad', key: padIndex },\n                _react2.default.createElement(\n                    'div',\n                    null,\n                    _react2.default.createElement(\n                        'label',\n                        null,\n                        labelPreText,\n                        labelYear\n                    ),\n                    _react2.default.createElement(\n                        'i',\n                        { className: [\"rmp-tab\", \"rmp-btn\", \"prev\", prevCss].join(' '), 'data-id': padIndex, onClick: prevHandler },\n                        '<'\n                    ),\n                    _react2.default.createElement(\n                        'i',\n                        { className: [\"rmp-tab\", \"rmp-btn\", \"next\", nextCss].join(' '), 'data-id': padIndex, onClick: nextHandler },\n                        '>'\n                    )\n                ),\n                _react2.default.createElement(\n                    'ul',\n                    null,\n                    mapToArray(12, function (i) {\n                        var m = i + 1;\n                        var css = '';\n\n                        if (atMinYear && m < ymArr[0].min) {\n                            css = 'disable';\n                        } else if (atMaxYear && m > ymArr[yearMaxIdx].max) {\n                            css = 'disable';\n                        } else {\n                            var _from = rawValue.from,\n                                _to = rawValue.to;\n\n                            for (var _i = valOffset, last = values.length - 1; _i <= last; _i++) {\n                                var v = values[_i];\n                                if (v === m) {\n                                    valOffset++;\n                                    if (!isRange || _from.year === labelYear && padIndex === 0 && _i === 0 || _to.year === labelYear && padIndex === 1 && _i === last) {\n                                        css = 'active';\n                                    } else if (labelYear >= _from.year && labelYear <= _to.year) {\n                                        css = 'select';\n                                    }\n                                }\n                            }\n                            if (_this2.state.autoRange === 0) {\n                                var otherM = otherValue.month;\n                                if (otherM) {\n                                    if (padIndex === 0 && nextCss === 'disable' && m > otherM || padIndex === 1 && prevCss === 'disable' && m < otherM) {\n                                        css = 'disable';\n                                    }\n                                }\n                            }\n                        }\n                        var clickHandler = css !== 'disable' ? _this2._handleClickMonth : undefined;\n                        return _react2.default.createElement(\n                            'li',\n                            { key: i, className: [\"rmp-btn\", rawValue.type, css].join(' '),\n                                'data-id': padIndex + ':' + (i + 1),\n                                onClick: clickHandler },\n                            months.length > i ? months[i] : i\n                        );\n                    })\n                )\n            );\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var pads = [];\n            var popupClass = '';\n            if (this.state.rawValue.type === 'range') {\n                pads.push(this.optionPad(0), this.optionPad(1));\n                popupClass = 'range';\n            } else {\n                pads.push(this.optionPad(0));\n            }\n\n            return _react2.default.createElement(\n                'div',\n                { className: [\"month-picker\", this.props.className].join(' ') },\n                this.props.children,\n                _react2.default.createElement(\n                    'div',\n                    { className: [\"rmp-container\", \"rmp-table\", this.props.className, this.state.showed ? \"show\" : ''].join(' ') },\n                    _react2.default.createElement(_reactTapper2.default, { className: 'rmp-overlay', onTap: this._handleOverlayTouchTap }),\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'rmp-cell' },\n                        _react2.default.createElement(\n                            'div',\n                            { className: [\"rmp-popup\", popupClass, this.props.theme, this.state.showed ? \"show\" : ''].join(' ') },\n                            pads\n                        )\n                    )\n                )\n            );\n        }\n    }, {\n        key: 'dismiss',\n        value: function dismiss() {\n            if (this.state.closeable) {\n                this._onDismiss();\n            }\n        }\n    }, {\n        key: 'show',\n        value: function show() {\n            // prevent rapid show/hide\n            this._onShow();\n        }\n    }, {\n        key: '_onShow',\n        value: function _onShow() {\n            var _this3 = this;\n\n            setTimeout(function () {\n                _this3.state.closeable = true;\n            }, 250);\n            this.setState({ showed: true });\n            this.props.onShow && this.props.onShow();\n        }\n    }, {\n        key: '_onDismiss',\n        value: function _onDismiss(s) {\n            this.setState(Object.assign({ showed: false, loading: false }, s));\n            this.props.onDismiss && this.props.onDismiss(this.value());\n        }\n    }, {\n        key: 'getAvailable',\n        value: function getAvailable(n, _ref) {\n            var year = _ref.year,\n                month = _ref.month;\n\n            if (n === 0) return null;\n            month += n - 1;\n            while (month > 12 || month < 1) {\n                if (month > 12) {\n                    month -= 12;\n                    year += 1;\n                } else {\n                    month += 12;\n                    year -= 1;\n                }\n            }\n\n            var years = this.state.years;\n\n            if (n > 0) {\n                var y = years[years.length - 1];\n                var last = { year: y.year, month: y.max };\n                var d = compareYM({ year: year, month: month }, last);\n                if (d > 0) return last;\n            } else {\n                var _y = years[0];\n                var first = { year: _y.year, month: _y.min };\n                var _d = compareYM({ year: year, month: month }, first);\n                if (_d < 0) return first;\n            }\n            return { year: year, month: month };\n        }\n    }, {\n        key: 'setYear',\n        value: function setYear(idx, step) {\n            var yearIndexes = this.state.yearIndexes.concat();\n            yearIndexes[idx] += step;\n            this.setState({ yearIndexes: yearIndexes });\n\n            var theYear = this.state.years[yearIndexes[idx]].year;\n            this.props.onYearChange && this.props.onYearChange(theYear);\n        }\n    }, {\n        key: 'getDID',\n        value: function getDID(e) {\n            var el = e.target;\n            return el.dataset ? el.dataset.id : el.getAttribute('data-id');\n        }\n\n        // hasStyleClass(e, name) {\n        //     const el = e.target\n        //     const styleClass = el.getAttribute('class').split(' ')\n        //     return styleClass.includes(name)\n        // }\n\n    }, {\n        key: '_reset',\n        value: function _reset() {\n            var rawValue = validValue(this.props.value, this.state.years, this.state.yearIndexes);\n            return { rawValue: rawValue };\n        }\n    }], [{\n        key: 'getDerivedStateFromProps',\n        value: function getDerivedStateFromProps(props, state) {\n            if (props.age > state.age) {\n                var yearArr = getYearArray(props.years);\n                var yearIndexes = [0];\n                var rawValue = validValue(props.value, yearArr, yearIndexes);\n                return {\n                    age: props.age,\n                    autoRange: validateAutoRange(props.autoRange),\n                    years: yearArr,\n                    rawValue: rawValue,\n                    yearIndexes: yearIndexes\n                };\n            }\n            // No state update necessary\n            return null;\n        }\n    }]);\n\n    return MonthPicker;\n}(_react.Component);\n\nMonthPicker.propTypes = {\n    age: _propTypes2.default.number,\n    autoRange: _propTypes2.default.number,\n    years: _propTypes2.default.oneOfType([_propTypes2.default.number, // exact number of a year\n    _propTypes2.default.arrayOf(_propTypes2.default.number), // array of specific years: [2008, 2011, 2012, 2014, 2016]\n    _propTypes2.default.shape({ // { min: 2013 } | { min: {year: 2013, month: 4} } | { min: {year: 2013, month: 4}, max: {year: 2016, month: 9} }\n        min: _propTypes2.default.oneOfType([_propTypes2.default.number, TypeYM]),\n        max: _propTypes2.default.oneOfType([_propTypes2.default.number, TypeYM])\n    })]),\n    value: _propTypes2.default.oneOfType([TypeYM, _propTypes2.default.arrayOf(TypeYM), _propTypes2.default.shape({\n        from: TypeYM,\n        to: TypeYM\n    })]),\n    lang: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.string), // lang texts for months: ['Jan', 'Feb', 'Mar', 'Apr', ... ]\n    _propTypes2.default.shape({\n        months: _propTypes2.default.arrayOf(_propTypes2.default.string),\n        from: _propTypes2.default.string, // lang text for 'from'\n        to: _propTypes2.default.string // lang text for 'to'\n    })]),\n    onChange: _propTypes2.default.func,\n    onYearChange: _propTypes2.default.func,\n    onShow: _propTypes2.default.func,\n    onDismiss: _propTypes2.default.func,\n    onClickAway: _propTypes2.default.func,\n    theme: _propTypes2.default.string\n};\nMonthPicker.defaultProps = {\n    age: 0,\n    autoRange: 0,\n    years: getYearsByNum(5),\n    onChange: function onChange(year, month, idx) {},\n\n    theme: 'light'\n};\n\nvar _initialiseProps = function _initialiseProps() {\n    var _this4 = this;\n\n    this._handleOverlayTouchTap = function (e) {\n        if (_this4.state.closeable) {\n            _this4._onDismiss();\n            _this4.props.onClickAway && _this4.props.onClickAway(e);\n        }\n    };\n\n    this._handleClickMonth = function (e) {\n        if (_this4.state.showed) {\n            var refid = _this4.getDID(e).split(':');\n            var idx = parseInt(refid[0], 10);\n            var month = parseInt(refid[1], 10);\n            var year = _this4.state.years[_this4.state.yearIndexes[idx]].year;\n            var rawValue = Object.assign({}, _this4.state.rawValue);\n            var update = { rawValue: rawValue };\n            if (rawValue.type === 'single') {\n                Object.assign(rawValue, { year: year, month: month });\n            } else if (rawValue.type === 'multiple') {\n                Object.assign(rawValue, { choices: rawValue.choices.concat() });\n                var existIndex = rawValue.choices.findIndex(function (c) {\n                    return c.year === year && c.month === month;\n                });\n                if (existIndex < 0) {\n                    rawValue.choices.push({ year: year, month: month });\n                    rawValue.choices.sort(function (a, b) {\n                        return a.year === b.year ? a.month - b.month : a.year - b.year;\n                    });\n                } else {\n                    rawValue.choices.splice(existIndex, 1);\n                }\n            } else if (rawValue.type === 'range') {\n                var keys = _RANGE_KEYS;\n                var thisKey = keys[idx],\n                    otherKey = keys[1 - idx];\n                var pick = { year: year, month: month };\n                Object.assign(rawValue, _defineProperty({}, thisKey, pick));\n\n                var d = compareYM(pick, rawValue[otherKey]);\n                if (thisKey === 'from' && d > 0 || thisKey === 'to' && d < 0) {\n                    var n = Math.sign(d) * _this4.state.autoRange;\n                    var otherV = _this4.getAvailable(n, { year: year, month: month });\n                    if (otherV) {\n                        Object.assign(rawValue, _defineProperty({}, otherKey, otherV));\n                        var _state2 = _this4.state,\n                            yearIndexes = _state2.yearIndexes,\n                            years = _state2.years;\n\n                        for (var i = 0, l = years.length; i < l; i++) {\n                            if (years[i].year === otherV.year) {\n                                update.yearIndexes = yearIndexes.concat();\n                                update.yearIndexes[1 - idx] = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            _this4.setState(update);\n            _this4.props.onChange(year, month, idx);\n        }\n    };\n\n    this._goPrevYear = function (e) {\n        var idx = parseInt(_this4.getDID(e), 10);\n        if (_this4.state.yearIndexes[idx] > 0) {\n            _this4.setYear(idx, -1);\n        }\n    };\n\n    this._goNextYear = function (e) {\n        var idx = parseInt(_this4.getDID(e), 10);\n        if (_this4.state.yearIndexes[idx] < _this4.state.years.length - 1) {\n            _this4.setYear(idx, 1);\n        }\n    };\n\n    this._keyDown = function (e) {\n        if (!_this4.state.showed) return;\n\n        var _state$rawValue2 = _this4.state.rawValue,\n            type = _state$rawValue2.type,\n            pads = _state$rawValue2.pads,\n            year = _state$rawValue2.year,\n            month = _state$rawValue2.month,\n            choices = _state$rawValue2.choices;\n\n\n        if (e.key === 'Escape') {\n            _this4._onDismiss(_this4._reset());\n            e.stopPropagation();\n        } else if (e.key === 'Enter') {\n            _this4._onDismiss();\n            e.stopPropagation();\n        } else if (pads === 1) {\n            //console.log(e.key, e.keyCode)\n            // let month = value.month\n            // if (e.key === 'ArrowLeft') {\n            //     month--\n            // }\n            // else if (e.key === 'ArrowRight') {\n            //     month++\n            // }\n            // else if (e.key === 'ArrowUp') {\n            //     month -= 3\n            // }\n            // else if (e.key === 'ArrowDown') {\n            //     month += 3\n            // }\n            // if (month > 0 && month < 13 && month !== value.month) {\n            //     this.setState({ rawValue: { type, year, month } }) //TODO\n            //     this.props.onChange(year, month, 0)\n            //     e.stopPropagation()\n            // }\n        }\n    };\n};\n\nexports.default = MonthPicker;\n\n\n//# sourceURL=webpack:///./node_modules/react-month-picker/lib/month-picker.js?");

/***/ }),

/***/ "./node_modules/react-tapper/lib/event-support.js":
/*!********************************************************!*\
  !*** ./node_modules/react-tapper/lib/event-support.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar TAGNAMES = {\n    'select': 'input',\n    'change': 'input',\n    'submit': 'form',\n    'reset': 'form',\n    'error': 'img',\n    'load': 'img',\n    'abort': 'img'\n};\n\nvar eventSupport = function eventSupport(eventName) {\n    //to support compilation in server-side\n    if (typeof window === \"undefined\" || typeof document === \"undefined\") return false;\n    var el = document.createElement(TAGNAMES[eventName] || 'div');\n    eventName = 'on' + eventName;\n    var isSupported = eventName in el;\n    if (!isSupported) {\n        el.setAttribute(eventName, 'return;');\n        isSupported = typeof el[eventName] == 'function';\n    }\n    el = null;\n    return isSupported;\n};\n\nexports.default = eventSupport;\n\n\n//# sourceURL=webpack:///./node_modules/react-tapper/lib/event-support.js?");

/***/ }),

/***/ "./node_modules/react-tapper/lib/tappable.js":
/*!***************************************************!*\
  !*** ./node_modules/react-tapper/lib/tappable.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _touchSupport = __webpack_require__(/*! ./touch-support */ \"./node_modules/react-tapper/lib/touch-support.js\");\n\nvar _touchSupport2 = _interopRequireDefault(_touchSupport);\n\nvar _touchStyles = __webpack_require__(/*! ./touch-styles */ \"./node_modules/react-tapper/lib/touch-styles.js\");\n\nvar _touchStyles2 = _interopRequireDefault(_touchStyles);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n                target[key] = source[key];\n            }\n        }\n    }return target;\n};\n\nvar Tappable = function (_Component) {\n    _inherits(Tappable, _Component);\n\n    function Tappable(props, context) {\n        _classCallCheck(this, Tappable);\n\n        var _this = _possibleConstructorReturn(this, (Tappable.__proto__ || Object.getPrototypeOf(Tappable)).call(this, props, context));\n\n        _this.state = _this.getInitialState();\n\n        _this.touchable = (0, _touchSupport2.default)();\n        return _this;\n    }\n\n    _createClass(Tappable, [{\n        key: 'getInitialState',\n        value: function getInitialState() {\n            return {\n                x: null,\n                y: null,\n                swiping: false,\n                start: 0\n            };\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var props = this.props,\n                style = {};\n            _extends(style, _touchStyles2.default, props.style);\n\n            var newComponentProps = _extends({}, props, {\n                style: style,\n                className: props.className,\n                disabled: props.disabled\n                //, handlers: this.handlers\n            }, this.handlers());\n\n            delete newComponentProps.onTap;\n            delete newComponentProps.onPress;\n            delete newComponentProps.onPinchStart;\n            delete newComponentProps.onPinchMove;\n            delete newComponentProps.onPinchEnd;\n            delete newComponentProps.moveThreshold;\n            delete newComponentProps.pressDelay;\n            delete newComponentProps.pressMoveThreshold;\n            delete newComponentProps.preventDefault;\n            delete newComponentProps.stopPropagation;\n            delete newComponentProps.component;\n            delete newComponentProps.flickThreshold;\n            delete newComponentProps.delta;\n            //delete newComponentProps.handlers\n\n            return (0, _react.createElement)(props.component, newComponentProps, props.children);\n        }\n    }, {\n        key: 'calculatePos',\n        value: function calculatePos(e) {\n            var x = e.changedTouches[0].clientX;\n            var y = e.changedTouches[0].clientY;\n\n            var xd = this.state.x - x;\n            var yd = this.state.y - y;\n\n            var axd = Math.abs(xd);\n            var ayd = Math.abs(yd);\n\n            return {\n                deltaX: xd,\n                deltaY: yd,\n                absX: axd,\n                absY: ayd\n            };\n        }\n    }, {\n        key: 'touchStart',\n        value: function touchStart(e) {\n            if (e.touches.length > 1) {\n                return;\n            }\n\n            if (!this.touchable) {\n                console.debug('Damn! You are using a non-touchable browser simulating touch events!');\n                this.touchable = true;\n            }\n\n            this.setState({\n                start: Date.now(),\n                x: e.touches[0].clientX,\n                y: e.touches[0].clientY,\n                swiping: false\n            });\n        }\n    }, {\n        key: 'touchMove',\n        value: function touchMove(e) {\n            if (!this.state.x || !this.state.y || e.touches.length > 1) {\n                return;\n            }\n\n            var cancelPageSwipe = false;\n            var pos = this.calculatePos(e);\n\n            if (pos.absX < this.props.delta && pos.absY < this.props.delta) {\n                return;\n            }\n\n            if (pos.absX > pos.absY) {\n                if (pos.deltaX > 0) {\n                    if (this.props.onSwipingLeft) {\n                        this.props.onSwipingLeft(e, pos.absX);\n                        cancelPageSwipe = true;\n                    }\n                } else {\n                    if (this.props.onSwipingRight) {\n                        this.props.onSwipingRight(e, pos.absX);\n                        cancelPageSwipe = true;\n                    }\n                }\n            } else {\n                if (pos.deltaY > 0) {\n                    if (this.props.onSwipingUp) {\n                        this.props.onSwipingUp(e, pos.absY);\n                        cancelPageSwipe = true;\n                    }\n                } else {\n                    if (this.props.onSwipingDown) {\n                        this.props.onSwipingDown(e, pos.absY);\n                        cancelPageSwipe = true;\n                    }\n                }\n            }\n\n            this.setState({ swiping: true });\n\n            if (cancelPageSwipe) {\n                e.preventDefault();\n            }\n        }\n    }, {\n        key: 'touchEnd',\n        value: function touchEnd(ev) {\n            if (this.state.swiping) {\n                var pos = this.calculatePos(ev);\n\n                var time = Date.now() - this.state.start;\n                var velocity = Math.sqrt(pos.absX * pos.absX + pos.absY * pos.absY) / time;\n                var isFlick = velocity > this.props.flickThreshold;\n\n                this.props.onSwiped && this.props.onSwiped(ev, pos.deltaX, pos.deltaY, isFlick);\n\n                if (pos.absX > pos.absY) {\n                    if (pos.deltaX > 0) {\n                        this.props.onSwipedLeft && this.props.onSwipedLeft(ev, pos.deltaX);\n                    } else {\n                        this.props.onSwipedRight && this.props.onSwipedRight(ev, pos.deltaX);\n                    }\n                } else {\n                    if (pos.deltaY > 0) {\n                        this.props.onSwipedUp && this.props.onSwipedUp(ev, pos.deltaY);\n                    } else {\n                        this.props.onSwipedDown && this.props.onSwipedDown(ev, pos.deltaY);\n                    }\n                }\n            } else {\n                this._handleTap(ev);\n            }\n\n            this.setState(this.getInitialState());\n        }\n    }, {\n        key: 'touchCancel',\n        value: function touchCancel(ev) {\n            this.setState(this.getInitialState());\n        }\n    }, {\n        key: '_handleClick',\n        value: function _handleClick(ev) {\n            var _this2 = this;\n\n            //!this.touchable && this._handleTap(ev)\n            if (this.state.start === 0) {\n                this._handleTap(ev);\n            } else {\n                setTimeout(function () {\n                    _this2.state.start === 0 && _this2._handleTap(ev);\n                }, 300);\n            }\n        }\n    }, {\n        key: '_handleTap',\n        value: function _handleTap(ev) {\n            this.props.onTap && this.props.onTap(ev);\n        }\n    }, {\n        key: 'handlers',\n        value: function handlers() {\n            return {\n                onTouchStart: this.touchStart.bind(this),\n                onTouchMove: this.touchMove.bind(this),\n                onTouchEnd: this.touchEnd.bind(this),\n                onTouchCancel: this.touchCancel.bind(this),\n                onClick: this._handleClick.bind(this)\n            };\n        }\n    }]);\n\n    return Tappable;\n}(_react.Component);\n\nTappable.propTypes = {\n    component: _propTypes2.default.any,\n    onTap: _propTypes2.default.func,\n\n    onSwiped: _propTypes2.default.func,\n    onSwipingUp: _propTypes2.default.func,\n    onSwipingRight: _propTypes2.default.func,\n    onSwipingDown: _propTypes2.default.func,\n    onSwipingLeft: _propTypes2.default.func,\n    onSwipedUp: _propTypes2.default.func,\n    onSwipedRight: _propTypes2.default.func,\n    onSwipedDown: _propTypes2.default.func,\n    onSwipedLeft: _propTypes2.default.func,\n    flickThreshold: _propTypes2.default.number,\n    delta: _propTypes2.default.number\n};\nTappable.defaultProps = {\n    component: 'div',\n    flickThreshold: 0.6,\n    delta: 10\n};\nexports.default = Tappable;\n\n\n//# sourceURL=webpack:///./node_modules/react-tapper/lib/tappable.js?");

/***/ }),

/***/ "./node_modules/react-tapper/lib/touch-styles.js":
/*!*******************************************************!*\
  !*** ./node_modules/react-tapper/lib/touch-styles.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar touchStyles = {\n    WebkitTapHighlightColor: 'rgba(0,0,0,0)',\n    WebkitTouchCallout: 'none',\n    WebkitUserSelect: 'none',\n    KhtmlUserSelect: 'none',\n    MozUserSelect: 'none',\n    msUserSelect: 'none',\n    userSelect: 'none'\n    //cursor: 'pointer'\n};\n\nexports.default = touchStyles;\n\n\n//# sourceURL=webpack:///./node_modules/react-tapper/lib/touch-styles.js?");

/***/ }),

/***/ "./node_modules/react-tapper/lib/touch-support.js":
/*!********************************************************!*\
  !*** ./node_modules/react-tapper/lib/touch-support.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _eventSupport = __webpack_require__(/*! ./event-support */ \"./node_modules/react-tapper/lib/event-support.js\");\n\nvar _eventSupport2 = _interopRequireDefault(_eventSupport);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar __TouchSupported = void 0;\nvar touchSupport = function touchSupport() {\n    if (typeof __TouchSupported === 'boolean') return __TouchSupported;\n\n    __TouchSupported = (0, _eventSupport2.default)(\"touchstart\"); //(\"ontouchstart\" in document.documentElement)\n    return __TouchSupported;\n};\n\nexports.default = touchSupport;\n\n\n//# sourceURL=webpack:///./node_modules/react-tapper/lib/touch-support.js?");

/***/ })

}]);