# Generated by Django 3.0.5 on 2021-04-22 21:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import image.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('main', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(verbose_name='順番')),
                ('picture', models.ImageField(upload_to=image.models.get_upload_to, verbose_name='イメージ(original)')),
                ('picture_250x', models.ImageField(null=True, upload_to='', verbose_name='イメージ(250x)')),
                ('picture_500x', models.ImageField(null=True, upload_to='', verbose_name='イメージ(500x)')),
                ('width', models.IntegerField(default=0, verbose_name='width(px)')),
                ('height', models.IntegerField(default=0, verbose_name='height(px)')),
                ('upload_date', models.DateTimeField(auto_now_add=True, verbose_name='アップロード日')),
                ('num_of_downloads', models.IntegerField(default=0, verbose_name='ダウンロード数')),
                ('d1_per_day', models.IntegerField(default=0, verbose_name='ダウンロード数(1日)')),
                ('num_of_views', models.IntegerField(default=0, verbose_name='閲覧数')),
                ('v1_per_day', models.IntegerField(default=0, verbose_name='閲覧数(1日目)')),
                ('v2_per_day', models.IntegerField(default=0, verbose_name='閲覧数(2日目)')),
                ('v3_per_day', models.IntegerField(default=0, verbose_name='閲覧数(3日目)')),
                ('score', models.FloatField(default=0, verbose_name='スコア(人気順)')),
                ('changed', models.BooleanField(default=0, verbose_name='変更有(スコア計算用)')),
                ('recommend_score', models.FloatField(default=False, verbose_name='スコア(おすすめ順）')),
                ('publisher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Blog', verbose_name='掲載ブログ')),
            ],
            options={
                'verbose_name': 'ブログ画像',
                'verbose_name_plural': 'ブログ画像',
                'db_table': 'image',
                'ordering': ['-publisher__post_date', 'publisher__order_for_simul', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='追加日')),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='image.Image', verbose_name='画像')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ユーザ')),
            ],
            options={
                'verbose_name': 'お気に入り画像',
                'verbose_name_plural': 'お気に入り画像',
                'db_table': 'favorite',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='image',
            index=models.Index(fields=['-publisher', 'order'], name='newer_post'),
        ),
        migrations.AddIndex(
            model_name='image',
            index=models.Index(fields=['-num_of_downloads', '-recommend_score'], name='dl'),
        ),
        migrations.AddIndex(
            model_name='image',
            index=models.Index(fields=['-score', '-recommend_score'], name='popularity'),
        ),
        migrations.AddIndex(
            model_name='image',
            index=models.Index(fields=['-num_of_views', '-recommend_score'], name='view'),
        ),
        migrations.AlterUniqueTogether(
            name='image',
            unique_together={('publisher', 'order')},
        ),
        migrations.AlterUniqueTogether(
            name='favorite',
            unique_together={('image', 'user')},
        ),
    ]
